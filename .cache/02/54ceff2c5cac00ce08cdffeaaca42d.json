{"id":"mTXv","dependencies":[{"name":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-anywhere\\lib\\src\\getFromAST.js.map","includedInParent":true,"mtime":1603029498220},{"name":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-anywhere\\src\\getFromAST.ts","includedInParent":true,"mtime":1603029498220},{"name":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\package.json","includedInParent":true,"mtime":1607330371811},{"name":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-anywhere\\package.json","includedInParent":true,"mtime":1603029498220}],"generated":{"js":"\"use strict\";function n(n){if(\"Document\"!==n.kind)throw new Error('Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql');if(n.definitions.filter(function(n){return\"OperationDefinition\"===n.kind}).length>1)throw new Error(\"Queries must have exactly one operation definition.\")}function e(n){return n.definitions.filter(function(n){return\"FragmentDefinition\"===n.kind})}function t(n){void 0===n&&(n=[]);var e={};return n.forEach(function(n){e[n.name.value]=n}),e}function i(e){var t;n(e);for(var i=0,r=e.definitions;i<r.length;i++){var o=r[i];if(\"OperationDefinition\"===o.kind){var a=o.operation;if(\"query\"===a||\"mutation\"===a||\"subscription\"===a)return o}\"FragmentDefinition\"!==o.kind||t||(t=o)}if(t)return t;throw new Error(\"Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.getFragmentDefinitions=e,exports.createFragmentMap=t,exports.getMainDefinition=i;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/getFromAST.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":13}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":22}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":8,"column":23},"generated":{"line":1,"column":24}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":1,"column":27}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":9,"column":19},"generated":{"line":1,"column":30}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":1,"column":43}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":1,"column":45}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":10,"column":4},"generated":{"line":1,"column":50}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":10,"column":10},"generated":{"line":1,"column":56}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":10,"column":14},"generated":{"line":1,"column":60}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":1,"column":66}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":19,"column":2},"generated":{"line":1,"column":220}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":14,"column":27},"generated":{"line":1,"column":223}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":14,"column":31},"generated":{"line":1,"column":225}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":14,"column":43},"generated":{"line":1,"column":237}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":14,"column":50},"generated":{"line":1,"column":244}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":14,"column":51},"generated":{"line":1,"column":253}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":15,"column":4},"generated":{"line":1,"column":256}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":15,"column":31},"generated":{"line":1,"column":262}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":15,"column":11},"generated":{"line":1,"column":286}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":15,"column":22},"generated":{"line":1,"column":288}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":16,"column":5},"generated":{"line":1,"column":295}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":19,"column":25},"generated":{"line":1,"column":302}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":20,"column":4},"generated":{"line":1,"column":304}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":20,"column":10},"generated":{"line":1,"column":310}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":20,"column":14},"generated":{"line":1,"column":314}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":20,"column":20},"generated":{"line":1,"column":320}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":375}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":384}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":25,"column":39},"generated":{"line":1,"column":386}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":34,"column":2},"generated":{"line":1,"column":389}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":26,"column":54},"generated":{"line":1,"column":396}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":26,"column":58},"generated":{"line":1,"column":398}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":26,"column":70},"generated":{"line":1,"column":410}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":26,"column":77},"generated":{"line":1,"column":417}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":26,"column":78},"generated":{"line":1,"column":426}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":1,"column":429}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":27,"column":28},"generated":{"line":1,"column":435}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":1,"column":458}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":27,"column":19},"generated":{"line":1,"column":460}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":1,"column":467}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":1,"column":476}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":1,"column":478}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":1,"column":486}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":1,"column":490}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":1,"column":494}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":43,"column":34},"generated":{"line":1,"column":496}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":44,"column":2},"generated":{"line":1,"column":500}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":44,"column":8},"generated":{"line":1,"column":504}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":44,"column":32},"generated":{"line":1,"column":506}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":49,"column":2},"generated":{"line":1,"column":509}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":1,"column":516}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":45,"column":12},"generated":{"line":1,"column":518}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":45,"column":20},"generated":{"line":1,"column":526}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":45,"column":21},"generated":{"line":1,"column":535}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":46,"column":4},"generated":{"line":1,"column":538}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":46,"column":13},"generated":{"line":1,"column":540}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":1,"column":542}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":46,"column":27},"generated":{"line":1,"column":547}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":46,"column":36},"generated":{"line":1,"column":554}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":1,"column":558}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":560}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":569}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":57,"column":34},"generated":{"line":1,"column":571}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":60,"column":2},"generated":{"line":1,"column":574}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":60,"column":6},"generated":{"line":1,"column":578}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":1,"column":580}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":58,"column":16},"generated":{"line":1,"column":582}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":2},"generated":{"line":1,"column":585}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":1,"column":589}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":1,"column":593}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":1,"column":595}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":1,"column":597}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":1,"column":599}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":34},"generated":{"line":1,"column":601}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":1,"column":613}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":1,"column":615}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":1,"column":617}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":25},"generated":{"line":1,"column":624}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":45},"generated":{"line":1,"column":628}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":7},"generated":{"line":1,"column":629}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":11},"generated":{"line":1,"column":633}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":21},"generated":{"line":1,"column":635}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":62,"column":21},"generated":{"line":1,"column":637}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":63,"column":4},"generated":{"line":1,"column":640}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":63,"column":28},"generated":{"line":1,"column":643}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":667}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":63,"column":19},"generated":{"line":1,"column":669}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":63,"column":51},"generated":{"line":1,"column":674}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":64,"column":6},"generated":{"line":1,"column":675}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":64,"column":12},"generated":{"line":1,"column":679}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":64,"column":25},"generated":{"line":1,"column":681}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":64,"column":64},"generated":{"line":1,"column":683}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":1,"column":693}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":65,"column":24},"generated":{"line":1,"column":696}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":65,"column":10},"generated":{"line":1,"column":706}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":65,"column":49},"generated":{"line":1,"column":709}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":65,"column":35},"generated":{"line":1,"column":722}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":65,"column":77},"generated":{"line":1,"column":725}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":65,"column":63},"generated":{"line":1,"column":742}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":66,"column":8},"generated":{"line":1,"column":744}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":66,"column":15},"generated":{"line":1,"column":751}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":69,"column":28},"generated":{"line":1,"column":753}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":69,"column":8},"generated":{"line":1,"column":776}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":69,"column":19},"generated":{"line":1,"column":778}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":69,"column":53},"generated":{"line":1,"column":784}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":1,"column":788}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":72,"column":27},"generated":{"line":1,"column":790}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":76,"column":2},"generated":{"line":1,"column":793}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":76,"column":6},"generated":{"line":1,"column":796}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":77,"column":4},"generated":{"line":1,"column":798}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":77,"column":11},"generated":{"line":1,"column":805}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":1,"column":807}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":80,"column":8},"generated":{"line":1,"column":813}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":80,"column":12},"generated":{"line":1,"column":817}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":80,"column":18},"generated":{"line":1,"column":823}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":966}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":974}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":25,"column":0},"generated":{"line":1,"column":997}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":1,"column":999}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":1,"column":1007}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":43,"column":0},"generated":{"line":1,"column":1025}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":1027}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":1035}},{"source":"../../src/getFromAST.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":1,"column":1053}}],"sources":{"../../src/getFromAST.ts":"import {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n} from 'graphql';\n\n// Checks the document for errors and throws an exception if there is an error.\nfunction checkDocument(doc: DocumentNode) {\n  if (doc.kind !== 'Document') {\n    throw new Error(`Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`);\n  }\n\n  const numOpDefinitions = doc.definitions.filter((definition) => {\n    return definition.kind === 'OperationDefinition';\n  }).length;\n\n  // can't have more than one operation definition per query\n  if (numOpDefinitions > 1) {\n    throw new Error('Queries must have exactly one operation definition.');\n  }\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(doc: DocumentNode): FragmentDefinitionNode[] {\n  let fragmentDefinitions: FragmentDefinitionNode[] = doc.definitions.filter((definition) => {\n    if (definition.kind === 'FragmentDefinition') {\n      return true;\n    } else {\n      return false;\n    }\n  }) as FragmentDefinitionNode[];\n\n  return fragmentDefinitions;\n}\n\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(fragments: FragmentDefinitionNode[] = []): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach((fragment) => {\n    symTable[fragment.name.value] = fragment;\n  });\n\n  return symTable;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(queryDoc: DocumentNode): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (operation === 'query' || operation === 'mutation' || operation === 'subscription') {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new Error('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\n"},"lineCount":null}},"error":null,"hash":"a2affbaa89c18f04836d3637dca3f940","cacheData":{"env":{}}}