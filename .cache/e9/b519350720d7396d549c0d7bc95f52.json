{"id":"../node_modules/graphql-gun/index.js","dependencies":[{"name":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\package.json","includedInParent":true,"mtime":1607332937128},{"name":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-gun\\package.json","includedInParent":true,"mtime":1603029445282},{"name":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-gun\\.babelrc","includedInParent":true,"mtime":1603029445282},{"name":"gun/gun","loc":{"line":1,"column":20},"parent":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-gun\\index.js","resolved":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\gun\\gun.js"},{"name":"graphql-anywhere","loc":{"line":2,"column":24},"parent":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-gun\\index.js","resolved":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-anywhere\\lib\\src\\index.js"},{"name":"./async","loc":{"line":7,"column":12},"parent":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-gun\\index.js","resolved":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-gun\\async.js"},{"name":"try-get","loc":{"line":8,"column":23},"parent":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\graphql-gun\\index.js","resolved":"C:\\Users\\shadow\\projects\\open-source\\gun-cli\\node_modules\\try-get\\index.js"}],"generated":{"js":"const Gun = require(\"gun/gun\");\nconst graphql = require(\"graphql-anywhere\").default;\nconst {\n  thunkish,\n  deferrableOrImmediate,\n  arrayOrDeferrable\n} = require(\"./async\");\nconst tryGet = require(\"try-get\");\n\nmodule.exports = function graphqlGun(query, gun) {\n  gun = gun || Gun();\n  let resultValue = {};\n  let subscriptions = {};\n  const resolver = (fieldName, container, args, context, info) => {\n    let key = info.resultKey;\n    const {\n      subscribe: parentSubscribed,\n      index: indexInList,\n      ref: parentRef,\n      path,\n      chain\n    } = container;\n    let ref = parentRef;\n    let subscribe =\n      (parentSubscribed || \"live\" in tryGet(info, \"directives\", {})) &&\n      !(\"unlive\" in tryGet(info, \"directives\", {}));\n\n    if (info.isLeaf) {\n      if (key === \"_chain\") {\n        ref[key] = chain;\n        return chain;\n      } else {\n        return thunkish(resolve => {\n          const updater = val => {\n            if (!!val && val[key]) {\n              ref[key] = val[key];\n              resolve(val[key]);\n            } else {\n              ref[key] = val;\n              resolve(val);\n            }\n          };\n          const stringPath = [...path, key].join(\".\");\n          if (subscribe && subscriptions[stringPath] === undefined) {\n            subscriptions[stringPath] = chain.get(key).on(updater, true);\n          } else {\n            chain.get(key).once(updater);\n          }\n        });\n      }\n    } else if (args && args.type === \"Set\") {\n      ref[key] = ref[key] || [];\n      ref = ref[key];\n      const keyValueSet = {};\n      const resultSet = {};\n\n      const t = thunkish(function(rerunChild) {\n        const updater = function(data, _key, at) {\n          var gunRef = this; // also `at.gun`\n          Gun.obj.map(data, function(val, field) {\n            // or a for in\n            if (field === \"_\") return;\n            keyValueSet[field] = keyValueSet[field] || {};\n            resultSet[field] = {\n              chain: gunRef.get(field),\n              subscribe,\n              ref: keyValueSet[field],\n              path: [...path, key, field]\n            };\n          });\n          ref.splice(0, ref.length, ...Object.values(keyValueSet));\n          rerunChild(Object.values(resultSet));\n        };\n        chain.get(key).on(updater, true);\n      });\n      return t;\n    } else {\n      ref[key] = ref[key] || {};\n      return {\n        chain: chain.get(key),\n        subscribe,\n        path: [...path, key],\n        ref: ref[key]\n      };\n    }\n  };\n\n  const graphqlOut = graphql(\n    resolver,\n    query,\n    { path: [], ref: resultValue, chain: gun },\n    null,\n    null,\n    {\n      deferrableOrImmediate,\n      arrayOrDeferrable\n    }\n  );\n  const thunk = thunkish(function(triggerUpdate) {\n    triggerUpdate(resultValue);\n    if (graphqlOut.isThunk) {\n      graphqlOut(function(actualRes) {\n        triggerUpdate(resultValue); // TODO: Figure out how to use actualRes instead of tracking resultValue\n      });\n    }\n  });\n  const result = thunk.toPromiseFactory()();\n  result.next = thunk.toPromiseFactory();\n  result[Symbol.asyncIterator] = function() {\n    const factory = thunk.toPromiseFactory();\n    return {\n      next: () =>\n        factory().then(value => ({\n          value,\n          done: false\n        }))\n    };\n  };\n  result[Symbol.iterator] = result[Symbol.asyncIterator]; // TODO: Depricate this usage\n  return result;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/graphql-gun/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/graphql-gun/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}}],"sources":{"../node_modules/graphql-gun/index.js":"const Gun = require(\"gun/gun\");\nconst graphql = require(\"graphql-anywhere\").default;\nconst {\n  thunkish,\n  deferrableOrImmediate,\n  arrayOrDeferrable\n} = require(\"./async\");\nconst tryGet = require(\"try-get\");\n\nmodule.exports = function graphqlGun(query, gun) {\n  gun = gun || Gun();\n  let resultValue = {};\n  let subscriptions = {};\n  const resolver = (fieldName, container, args, context, info) => {\n    let key = info.resultKey;\n    const {\n      subscribe: parentSubscribed,\n      index: indexInList,\n      ref: parentRef,\n      path,\n      chain\n    } = container;\n    let ref = parentRef;\n    let subscribe =\n      (parentSubscribed || \"live\" in tryGet(info, \"directives\", {})) &&\n      !(\"unlive\" in tryGet(info, \"directives\", {}));\n\n    if (info.isLeaf) {\n      if (key === \"_chain\") {\n        ref[key] = chain;\n        return chain;\n      } else {\n        return thunkish(resolve => {\n          const updater = val => {\n            if (!!val && val[key]) {\n              ref[key] = val[key];\n              resolve(val[key]);\n            } else {\n              ref[key] = val;\n              resolve(val);\n            }\n          };\n          const stringPath = [...path, key].join(\".\");\n          if (subscribe && subscriptions[stringPath] === undefined) {\n            subscriptions[stringPath] = chain.get(key).on(updater, true);\n          } else {\n            chain.get(key).once(updater);\n          }\n        });\n      }\n    } else if (args && args.type === \"Set\") {\n      ref[key] = ref[key] || [];\n      ref = ref[key];\n      const keyValueSet = {};\n      const resultSet = {};\n\n      const t = thunkish(function(rerunChild) {\n        const updater = function(data, _key, at) {\n          var gunRef = this; // also `at.gun`\n          Gun.obj.map(data, function(val, field) {\n            // or a for in\n            if (field === \"_\") return;\n            keyValueSet[field] = keyValueSet[field] || {};\n            resultSet[field] = {\n              chain: gunRef.get(field),\n              subscribe,\n              ref: keyValueSet[field],\n              path: [...path, key, field]\n            };\n          });\n          ref.splice(0, ref.length, ...Object.values(keyValueSet));\n          rerunChild(Object.values(resultSet));\n        };\n        chain.get(key).on(updater, true);\n      });\n      return t;\n    } else {\n      ref[key] = ref[key] || {};\n      return {\n        chain: chain.get(key),\n        subscribe,\n        path: [...path, key],\n        ref: ref[key]\n      };\n    }\n  };\n\n  const graphqlOut = graphql(\n    resolver,\n    query,\n    { path: [], ref: resultValue, chain: gun },\n    null,\n    null,\n    {\n      deferrableOrImmediate,\n      arrayOrDeferrable\n    }\n  );\n  const thunk = thunkish(function(triggerUpdate) {\n    triggerUpdate(resultValue);\n    if (graphqlOut.isThunk) {\n      graphqlOut(function(actualRes) {\n        triggerUpdate(resultValue); // TODO: Figure out how to use actualRes instead of tracking resultValue\n      });\n    }\n  });\n  const result = thunk.toPromiseFactory()();\n  result.next = thunk.toPromiseFactory();\n  result[Symbol.asyncIterator] = function() {\n    const factory = thunk.toPromiseFactory();\n    return {\n      next: () =>\n        factory().then(value => ({\n          value,\n          done: false\n        }))\n    };\n  };\n  result[Symbol.iterator] = result[Symbol.asyncIterator]; // TODO: Depricate this usage\n  return result;\n};\n"},"lineCount":122}},"error":null,"hash":"4d1f9cad7cad3702f69506f20fe1c4f4","cacheData":{"env":{}}}